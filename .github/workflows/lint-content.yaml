name: Dassana Linter
on:
  pull_request:
   paths:
    - 'content/**'
   branches:
    - main
jobs:
  validate-schema:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install jq
        run: |
          apt update && apt install sudo
          sudo apt-get update && sudo apt-get install jq -y
      - name: Install yq
        run: |
          sudo wget -O /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/v4.6.1/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq
      - name: Set Dassana Variables
        id: dassana-variables
        run: |
          DASSANA_CATEGORIES=`yq -j e content/schemas/categories.yaml | jq -r 'keys | @csv'`
          echo 'DASSANA_CATEGORIES<<EOF' >> $GITHUB_ENV
          echo $DASSANA_CATEGORIES >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

          DASSANA_SUBCATEGORIES=`yq -j e content/schemas/categories.yaml | jq -r '. as $root | keys | .[] | $root[.]' | jq -r -s 'flatten | @csv'`
          echo 'DASSANA_SUBCATEGORIES<<EOF' >> $GITHUB_ENV
          echo $DASSANA_SUBCATEGORIES >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

          DASSANA_ACTIONS=`find content/actions -name "*.yaml" | xargs -I {} yq -j e {} | jq --sort-keys '.["id"]' | jq -r -s '. | @csv'`
          echo 'DASSANA_ACTIONS<<EOF' >> $GITHUB_ENV
          echo $DASSANA_ACTIONS >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

          DASSANA_VENDORS=`find content/workflows/vendors -name "*.yaml" | xargs -I {} yq -j e {} | jq --sort-keys '.["vendor-name"]' | jq -r -s '. | @csv'`
          echo 'DASSANA_VENDORS<<EOF' >> $GITHUB_ENV
          echo $DASSANA_VENDORS >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Find and Replace categories dassana-policy-context.yaml
        uses: jacobtomlinson/gha-find-replace@master
        with:
          find: "DASSANA_CATEGORIES"
          replace: ${{ env.DASSANA_CATEGORIES }}
          include: content/schemas/dassana-policy-context.yaml
      - name: Find and Replace subcategories in dassana-policy-context.yaml
        uses: jacobtomlinson/gha-find-replace@master
        with:
          find: "DASSANA_SUBCATEGORIES"
          replace: ${{ env.DASSANA_SUBCATEGORIES }}
          include: content/schemas/dassana-policy-context.yaml
      - name: Find and Replace vendors in dassana-policy-context.yaml
        uses: jacobtomlinson/gha-find-replace@master
        with:
          find: "DASSANA_VENDORS"
          replace: ${{ env.DASSANA_VENDORS }}
          include: content/schemas/dassana-policy-context.yaml
      - name: Find and Replace actions in dassana-vendor.yaml
        uses: jacobtomlinson/gha-find-replace@master
        with:
          find: "DASSANA_ACTIONS"
          replace: ${{ env.DASSANA_ACTIONS }}
          include: content/schemas/dassana-vendor.yaml
      - name: Find and Replace actions in dassana-general-context.yaml
        uses: jacobtomlinson/gha-find-replace@master
        with:
          find: "DASSANA_ACTIONS"
          replace: ${{ env.DASSANA_ACTIONS }}
          include: content/schemas/dassana-general-context.yaml
      - name: Find and Replace actions in dassana-resource-context.yaml
        uses: jacobtomlinson/gha-find-replace@master
        with:
          find: "DASSANA_ACTIONS"
          replace: ${{ env.DASSANA_ACTIONS }}
          include: content/schemas/dassana-resource-context.yaml
      - name: Find and Replace actions in dassana-policy-context.yaml
        uses: jacobtomlinson/gha-find-replace@master
        with:
          find: "DASSANA_ACTIONS"
          replace: ${{ env.DASSANA_ACTIONS }}
          include: content/schemas/dassana-policy-context.yaml
      - name: Check change
        run: |
          ls content/schemas/** | xargs cat
      - name: Validating actions
        uses: dassana-io/yaml-schema-validator-github-action@v1.0.1
        with:
          schema: content/schemas/dassana-action.yaml
          target: content/actions
      - name: Validating vendors
        uses: dassana-io/yaml-schema-validator-github-action@v1.0.1
        with:
          schema: content/schemas/dassana-vendor.yaml
          target: content/workflows/vendors
      #yaml-schema-validator-github-action requires target to be a directory so we copy the workflows to a specific directory and then give it to the actions
      - name: prepare content for yamale
        run: |

          mkdir content/general-context-tmp
          find content/workflows/csp/*/general-context -name "*.yaml" -exec cp "{}" ./content/general-context-tmp \;

          mkdir content/policy-context-tmp
          find content/workflows/csp/aws/service/*/resources/*/policy-context -name "*.yaml" -exec cp "{}" ./content/policy-context-tmp \;

      - name: Validating general context
        uses: dassana-io/yaml-schema-validator-github-action@v1.0.1
        with:
          schema: content/schemas/dassana-general-context.yaml
          target: ./content/general-context-tmp

      - name: Validating policy context
        uses: dassana-io/yaml-schema-validator-github-action@v1.0.1
        with:
          schema: content/schemas/dassana-policy-context.yaml
          target: ./content/policy-context-tmp
  validate-content-dir-and-file-structure:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.1
        with:
          persist-credentials: false
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
      - run: npm install -g @ls-lint/ls-lint
        working-directory: .dassana-internal-devops
      - run: ls-lint
        working-directory: .dassana-internal-devops
  validate-actions-deployment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.1
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install -r content/pkg/deps/python/requirements.txt --upgrade pip
      - name: Validate workflow steps
        run: |
          python .dassana-internal-devops/scripts/validate-actions-deployment.py
  validate-workflow-steps:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.1
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7.11
      - name: Install dependencies
        run: |
          python -m pip install -r content/pkg/deps/python/requirements.txt --upgrade pip
      - name: Validate workflow steps
        run: |
          python .dassana-internal-devops/scripts/validate-workflow-steps.py

#  TODO: rethink JQ validation
#  validate-jq-rules:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#        with:
#          persist-credentials: false
#      - name: Install jq
#        run: |
#          apt update && apt install sudo
#          sudo apt-get update && sudo apt-get install jq -y
#      - name: Install yq
#        run: |
#          sudo wget -O /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/v4.6.1/yq_linux_amd64
#          sudo chmod +x /usr/local/bin/yq
#      - name: Validate jq rules
#        run: |
#          chmod +x .dassana-internal-devops/scripts/validate-policies-rule-grammar.sh
#          chmod +x .dassana-internal-devops/scripts/validate-vendors-rule-grammar.sh
#          chmod +x .dassana-internal-devops/scripts/validate-resource-priority-rule-grammar.sh
#          .dassana-internal-devops/scripts/validate-policies-rule-grammar.sh | jq -s -e 'any(.) | not'
#          .dassana-internal-devops/scripts/validate-vendors-rule-grammar.sh | jq -s -e 'any(.) | not'
#          .dassana-internal-devops/scripts/validate-resource-priority-rule-grammar.sh | jq -s -e 'any(.) | not'
